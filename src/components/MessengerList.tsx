import React, { useState } from "react";
import "./MessengerList.css";

interface Contact {
  id: number;
  name: string;
  avatar: string;
  lastMessage: string;
  time: string;
  isOnline: boolean;
  hasUnread: boolean;
  isRead: boolean;
}

interface Message {
  id: number;
  text: string;
  time: string;
  isOwn: boolean;
  isRead: boolean;
}

const MessengerList: React.FC = () => {
  const [contacts] = useState<Contact[]>([
    {
      id: 1,
      name: "–°–∞–≥–∏—Ä–∞ –ñ–∞–Ω–¥–∞—Ä–±–µ–∫–æ...",
      avatar: "üë§",
      lastMessage:
        "–°–ª–æ–∂–Ω–æ —Å–∫–∞–∑–∞—Ç—å, –ø–æ—á–µ–º—É –∞–∫—Ç–∏–≤–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—é—â–∏–µ—Å—è —Å—Ç—Ä–∞–Ω—ã —Ç—Ä–µ—Ç—å–µ–≥–æ –º–∏—Ä...",
      time: "10:43",
      isOnline: true,
      hasUnread: true,
      isRead: false,
    },
    {
      id: 2,
      name: "–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω –ö–æ–Ω—Å—Ç–∞–Ω...",
      avatar: "üë§",
      lastMessage:
        "–ù–∞–¥–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç –∑–∞ –ø—Ä–æ—à–µ–¥—à–∏–π –∫–≤–∞—Ä—Ç–∞–ª, –±—É–¥–µ—Ç —Ç–∞–∫ –∂–µ –ê–í–† –ø–æ –ø—Ä–æ—Ü–µ—Å—Å–∞–º...",
      time: "10:43",
      isOnline: false,
      hasUnread: false,
      isRead: true,
    },
    {
      id: 3,
      name: "–ñ–∞–Ω–∞—Ç –î–∞—É–ª–µ—Ç–±–µ–∫–æ–≤",
      avatar: "üë§",
      lastMessage:
        "–°–ª–æ–∂–Ω–æ —Å–∫–∞–∑–∞—Ç—å, –ø–æ—á–µ–º—É –∞–∫—Ç–∏–≤–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—é—â–∏–µ—Å—è —Å—Ç—Ä–∞–Ω—ã —Ç—Ä–µ—Ç—å–µ–≥–æ –º–∏—Ä–∞...",
      time: "10:43",
      isOnline: true,
      hasUnread: false,
      isRead: false,
    },
    {
      id: 4,
      name: "–ò—Ä–∏–Ω–∞ –ú–∞—Å–ª—è–∫–æ–≤–∞",
      avatar: "üë§",
      lastMessage:
        "–°–ª–æ–∂–Ω–æ —Å–∫–∞–∑–∞—Ç—å, –ø–æ—á–µ–º—É –∞–∫—Ç–∏–≤–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—é—â–∏–µ—Å—è —Å—Ç—Ä–∞–Ω—ã —Ç—Ä–µ—Ç—å–µ–≥–æ –º–∏—Ä–∞...",
      time: "10:43",
      isOnline: false,
      hasUnread: false,
      isRead: true,
    },
    {
      id: 5,
      name: "–°–∞–º–∞—Ç –¢–æ–∫–∏—à–µ–≤",
      avatar: "üë§",
      lastMessage:
        "–°–ª–æ–∂–Ω–æ —Å–∫–∞–∑–∞—Ç—å, –ø–æ—á–µ–º—É –∞–∫—Ç–∏–≤–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—é—â–∏–µ—Å—è —Å—Ç—Ä–∞–Ω—ã —Ç—Ä–µ—Ç—å–µ–≥–æ –º–∏—Ä–∞...",
      time: "10:43",
      isOnline: false,
      hasUnread: false,
      isRead: true,
    },
  ]);

  const [messages] = useState<Message[]>([
    {
      id: 1,
      text: "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –ú–Ω–µ –Ω–∞–¥–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å –ê–í–†.",
      time: "06:00",
      isOwn: true,
      isRead: true,
    },
    {
      id: 2,
      text: "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –ú–Ω–µ –Ω–∞–¥–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å –ê–í–†.",
      time: "06:00",
      isOwn: true,
      isRead: true,
    },
    {
      id: 3,
      text: "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –ú–Ω–µ –Ω–∞–¥–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å –ê–í–†.",
      time: "06:00",
      isOwn: true,
      isRead: true,
    },
    {
      id: 4,
      text: "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –ú–Ω–µ –Ω–∞–¥–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å –ê–í–†.",
      time: "06:00",
      isOwn: true,
      isRead: true,
    },
    {
      id: 5,
      text: "–ù–∞—à–µ –¥–µ–ª–æ –Ω–µ —Ç–∞–∫ –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ, –∫–∞–∫ –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑–∞—Ç—å—Å—è: —Å–æ—Ü–∏–∞–ª—å–Ω–æ-—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –≥–æ–≤–æ—Ä–∏—Ç –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–π —Ü–µ–ª–µ—Å–æ–æ–±—Ä–∞–∑–Ω–æ—Å—Ç–∏ –ø—Ä–∏–Ω–∏–º–∞–µ–º—ã—Ö —Ä–µ—à–µ–Ω–∏–π. –ö–∞—Ä—Ç–µ–ª—å–Ω—ã–µ —Å–≥–æ–≤–æ—Ä—ã –Ω–µ –¥–æ–ø—É—Å–∫–∞—é—Ç —Å–∏—Ç—É–∞—Ü–∏–∏, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —Ä–∞–∑–Ω–µ—Å–µ–Ω—ã –Ω–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã. –†–∞–≤–Ω—ã–º –æ–±—Ä–∞–∑–æ–º, –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —à–∏—Ä–æ–∫–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –º–∞—Å—Å–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–∏—è –†–∞–≤–Ω—ã–º –æ–±—Ä–∞–∑–æ–º, –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π.",
      time: "10:43",
      isOwn: false,
      isRead: false,
    },
  ]);

  const [selectedContact] = useState<Contact | null>(contacts[0]);
  const [newMessage, setNewMessage] = useState("");

  const handleSendMessage = () => {
    if (newMessage.trim()) {
      // –õ–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
      setNewMessage("");
    }
  };

  return (
    <div className="messenger">
      {/* –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ */}
      <div className="messenger__sidebar">
        <div className="messenger__header">
          <div className="messenger__search">
            <div className="messenger__search-icon">üîç</div>
            <input
              type="text"
              placeholder="–ü–æ–∏—Å–∫"
              className="messenger__search-input"
            />
          </div>
          <button className="messenger__filter-btn">‚öôÔ∏è</button>
        </div>

        <div className="messenger__contacts">
          {contacts.map((contact) => (
            <div
              key={contact.id}
              className={`messenger__contact ${selectedContact?.id === contact.id ? "messenger__contact--active" : ""}`}
            >
              <div className="messenger__contact-avatar">
                {contact.avatar}
                {contact.isOnline && (
                  <div className="messenger__online-indicator"></div>
                )}
              </div>
              <div className="messenger__contact-info">
                <div className="messenger__contact-header">
                  <span className="messenger__contact-name">
                    {contact.name}
                  </span>
                  <span className="messenger__contact-time">
                    {contact.time}
                  </span>
                </div>
                <div className="messenger__contact-message">
                  {contact.isRead && (
                    <span className="messenger__read-icon">‚úì</span>
                  )}
                  <span className="messenger__message-text">
                    {contact.lastMessage}
                  </span>
                </div>
              </div>
              {contact.hasUnread && (
                <div className="messenger__unread-indicator"></div>
              )}
            </div>
          ))}
        </div>
      </div>

      {/* –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å —Å —á–∞—Ç–æ–º */}
      <div className="messenger__chat">
        {selectedContact ? (
          <>
            <div className="messenger__chat-header">
              <div className="messenger__chat-user">
                <div className="messenger__chat-avatar">
                  {selectedContact.avatar}
                  {selectedContact.isOnline && (
                    <div className="messenger__online-indicator"></div>
                  )}
                </div>
                <span className="messenger__chat-name">
                  {selectedContact.name}
                </span>
              </div>
              <span className="messenger__chat-time">29 –∏—é–ª—è</span>
            </div>

            <div className="messenger__messages">
              {messages.map((message) => (
                <div
                  key={message.id}
                  className={`messenger__message ${message.isOwn ? "messenger__message--own" : ""}`}
                >
                  <div className="messenger__message-content">
                    {message.text}
                  </div>
                  <div className="messenger__message-footer">
                    <span className="messenger__message-time">
                      {message.time}
                    </span>
                    {message.isOwn && message.isRead && (
                      <span className="messenger__message-read">‚úì</span>
                    )}
                  </div>
                </div>
              ))}

              <div className="messenger__date-separator">
                <span>–°–µ–≥–æ–¥–Ω—è</span>
              </div>
            </div>

            <div className="messenger__input">
              <button className="messenger__attachment-btn">üìé</button>
              <input
                type="text"
                placeholder="–ù–∞—á–Ω–∏—Ç–µ –æ–±—â–µ–Ω–∏–µ..."
                value={newMessage}
                onChange={(e) => setNewMessage(e.target.value)}
                onKeyPress={(e) => e.key === "Enter" && handleSendMessage()}
                className="messenger__input-field"
              />
              <button
                className="messenger__send-btn"
                onClick={handleSendMessage}
              >
                ‚û§
              </button>
            </div>
          </>
        ) : (
          <div className="messenger__no-chat">
            <p>–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ–±—â–µ–Ω–∏—è</p>
          </div>
        )}
      </div>
    </div>
  );
};

export default MessengerList;
